From 333c47a42a175f5ab4418c8aabfc9813c55ee886 Mon Sep 17 00:00:00 2001
From: Chion Tang <sdspeed@sina.com>
Date: Tue, 22 Dec 2015 14:07:04 +0800
Subject: [PATCH] Add keepalive feature for remote connections

---
 src/redir.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

--- a/src/redir.c
+++ b/src/redir.c
@@ -91,6 +91,7 @@ static int auth = 0;
 #ifdef HAVE_SETRLIMIT
 static int nofile = 0;
 #endif
+static int keepalive = 0;
 
 int
 getdestaddr(int fd, struct sockaddr_storage *destaddr)
@@ -698,6 +699,7 @@ accept_cb(EV_P_ ev_io *w, int revents)
     setsockopt(remotefd, SOL_SOCKET, SO_NOSIGPIPE, &opt, sizeof(opt));
 #endif
 
+    if (keepalive) {
     // Enable TCP keepalive feature
     int keepAlive    = 1;
     int keepIdle     = 40;
@@ -707,6 +709,7 @@ accept_cb(EV_P_ ev_io *w, int revents)
     setsockopt(remotefd, SOL_TCP, TCP_KEEPIDLE, (void *)&keepIdle, sizeof(keepIdle));
     setsockopt(remotefd, SOL_TCP, TCP_KEEPINTVL, (void *)&keepInterval, sizeof(keepInterval));
     setsockopt(remotefd, SOL_TCP, TCP_KEEPCNT, (void *)&keepCount, sizeof(keepCount));
+    }
 
     // Set non blocking
     setnonblocking(remotefd);
@@ -781,7 +784,7 @@ main(int argc, char **argv)
 
     USE_TTY();
 
-    while ((c = getopt_long(argc, argv, "f:s:p:l:k:t:m:c:b:a:n:huUvA",
+    while ((c = getopt_long(argc, argv, "f:s:p:l:k:t:m:c:b:a:n:huUvAK",
                             long_options, &option_index)) != -1) {
         switch (c) {
         case 0:
@@ -855,6 +858,9 @@ main(int argc, char **argv)
             LOGE("Unrecognized option: %s", optarg);
             opterr = 1;
             break;
+        case 'K':
+            keepalive = 1;
+            break;
         }
     }
 
@@ -903,6 +909,9 @@ main(int argc, char **argv)
         if (mptcp == 0) {
             mptcp = conf->mptcp;
         }
+        if (keepalive == 0) {
+            keepalive = conf->keepalive;
+        }
 #ifdef HAVE_SETRLIMIT
         if (nofile == 0) {
             nofile = conf->nofile;
@@ -950,6 +959,10 @@ main(int argc, char **argv)
         LOGI("onetime authentication enabled");
     }
 
+    if (keepalive) {
+        LOGI("TCP keepalive enabled in redir mode");
+    }
+
     // ignore SIGPIPE
     signal(SIGPIPE, SIG_IGN);
     signal(SIGABRT, SIG_IGN);
--- a/src/jconf.h
+++ b/src/jconf.h
@@ -56,6 +56,7 @@ typedef struct {
     char *method;
     char *timeout;
     int auth;
+    int keepalive;
     int fast_open;
     int nofile;
     char *nameserver;
--- a/src/jconf.c
+++ b/src/jconf.c
@@ -193,6 +193,8 @@ read_jconf(const char *file)
                 conf.fast_open = value->u.boolean;
             } else if (strcmp(name, "auth") == 0) {
                 conf.auth = value->u.boolean;
+            } else if (strcmp(name, "keepalive") == 0) {
+                conf.keepalive = value->u.boolean;
             } else if (strcmp(name, "nofile") == 0) {
                 conf.nofile = value->u.integer;
             } else if (strcmp(name, "nameserver") == 0) {
